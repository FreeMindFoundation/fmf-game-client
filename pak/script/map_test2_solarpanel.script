namespace map_test2 {	
	#define HOLDER_F	1
	#define C0_F		2
	#define C1_F		4
	#define C2_F		8
	#define C3_F		16
	#define ELEC_GAIN	500		// watts
	
	float elecGain = 0;
	float elecUsage = 0;
		
	float panel1 = 0;
	string pass1 = "";	
	float panel2 = 0;
	string pass2 = "";		
	float panel3 = 0;
	string pass3 = "";	
	float panel4 = 0;
	string pass4 = "";	
	
	void logout( string id ) {
		entity ent;
		
		ent = sys.getEntity( "solar_panel_terminal"+id );
		ent.setGuiParm( "gui_parm6" , 3 );
	}
	
	void uninstall_mb( string id ) {
		entity ent;
		float i;
		
		if( id == "1" ) {
			panel1 = 0;
		} else if( id == "2" ) {
			panel2 = 0;
		} else if( id == "3" ) {
			panel3 = 0;
		} else if( id == "4" ) {
			panel4 = 0;
		}
		
		for( i = 0; i < 4; i++ ) {
			ent = sys.getEntity( "light_p"+id+"_"+i );
			ent.setColor(1, 0, 0);
		}
		
		ent = sys.getEntity( "solar_panel_terminal"+id );
		ent.setGuiParm( "gui_parm12" , 2 );	// holder
		ent.setGuiParm( "gui_parm13" , 2 );	// 0
		ent.setGuiParm( "gui_parm14" , 2 );	// 1
		ent.setGuiParm( "gui_parm15" , 2 ); // 2
		ent.setGuiParm( "gui_parm16" , 2 ); // 3
		ent.setGuiParm( "gui_parm6" , 4 );

		sys.print( "uninstall_mb\n" );
	}
	
	void install_mb( string id ) {
		entity mb;
		
		mb = sys.getEntity( "solar_panel_mb"+id );
		
		pass1 = mb.getGuiParm( "gui_parm5" );
		
		mb = sys.getEntity( "solar_panel_terminal"+id );
		mb.setGuiParm( "gui_parm6" , 5 );
	}
	
	void verify_pass( string id ) {
		entity sp;
		sp = sys.getEntity( "solar_panel_terminal"+id );
	
		if( !sp ) {
			return;
		}
	
		if( sp.getGuiParm( "gui_parm1" ) == sys.strMid( pass1, 0, 1 ) && sp.getGuiParm( "gui_parm2" ) == sys.strMid( pass1, 1, 1 ) && sp.getGuiParm( "gui_parm3" ) == sys.strMid( pass1, 2, 1 ) ) {
			sp.setGuiParm( "gui_parm6" , 1 );	
			sys.print( "verify_pass ok\n" );
		} else {
			sp.setGuiParm( "ns0f" , 1 );	// force
			sp.setGuiParm( "gui_parm6" , 2 );
			sys.print( "verify_pass not ok " + sp.getGuiParm( "gui_parm1" ) + sp.getGuiParm( "gui_parm2" ) + sp.getGuiParm( "gui_parm3" ) + "\n" );
			
		}
	}
	
	void func_holder( string id ) {
		entity ent;
	
		ent = sys.getEntity( "solar_panel_terminal"+id );
	
		if( !ent ) {
			return;
		}
	
		if( id == "1" ) {
			if( panel1 & HOLDER_F ) {
				panel1 = panel1 ^ HOLDER_F;
				ent.setGuiParm( "gui_parm12" , 2 );
			} else {
				panel1 |= HOLDER_F;
				ent.setGuiParm( "gui_parm12" , 1 );	
			}
		} else if( id == "2" ) {
			if( panel2 & HOLDER_F ) {
				panel2 = panel2 ^ HOLDER_F;
				ent.setGuiParm( "gui_parm12" , 2 );
			} else {
				panel2 |= HOLDER_F;
				ent.setGuiParm( "gui_parm12" , 1 );	
			}
		} else if( id == "3" ) {
			if( panel3 & HOLDER_F ) {
				panel3 = panel3 ^ HOLDER_F;
				ent.setGuiParm( "gui_parm12" , 2 );
			} else {
				panel3 |= HOLDER_F;
				ent.setGuiParm( "gui_parm12" , 1 );	
			}
		} else if( id == "4" ) {
			if( panel4 & HOLDER_F ) {
				panel4 = panel4 ^ HOLDER_F;
				ent.setGuiParm( "gui_parm12" , 2 );
			} else {
				panel4 |= HOLDER_F;
				ent.setGuiParm( "gui_parm12" , 1 );	
			}
		}
		
	}
	
	void func_p0( string id ) {	
		entity ent;
		entity l;
	
		l = sys.getEntity( "light_p"+id+"_0" );
		ent = sys.getEntity( "solar_panel_terminal"+id );
	
		if( !ent || !l ) {
			return;
		}	

		if( id == "1" ) {
			if( panel1 & C0_F ) {
				panel1 = panel1 ^ C0_F;
				ent.setGuiParm( "gui_parm13" , 2 );
				l.setColor(1, 0, 0);
			} else {
				panel1 |= C0_F;
				ent.setGuiParm( "gui_parm13" , 1 );	
				l.setColor(0, 1, 0);
			}
		} else if( id == "2" ) {
			if( panel2 & C0_F ) {
				panel2 = panel2 ^ C0_F;
				ent.setGuiParm( "gui_parm13" , 2 );
				l.setColor(1, 0, 0);
			} else {
				panel2 |= C0_F;
				ent.setGuiParm( "gui_parm13" , 1 );	
				l.setColor(0, 1, 0);
			}
		} else if( id == "3" ) {
			if( panel3 & C0_F ) {
				panel3 = panel3 ^ C0_F;
				ent.setGuiParm( "gui_parm13" , 2 );
				l.setColor(1, 0, 0);
			} else {
				panel3 |= C0_F;
				ent.setGuiParm( "gui_parm13" , 1 );	
				l.setColor(0, 1, 0);
			}
		} else if( id == "4" ) {
			if( panel4 & C0_F ) {
				panel4 = panel4 ^ C0_F;
				ent.setGuiParm( "gui_parm13" , 2 );
				l.setColor(1, 0, 0);
			} else {
				panel4 |= C0_F;
				ent.setGuiParm( "gui_parm13" , 1 );	
				l.setColor(0, 1, 0);
			}
		}
	}
	
	void func_p1( string id ) {
		entity ent;
		entity l;
	
		l = sys.getEntity( "light_p"+id+"_1" );
		ent = sys.getEntity( "solar_panel_terminal"+id );
	
		if( !ent || !l ) {
			return;
		}	

		if( id == "1" ) {
			if( panel1 & C1_F ) {
				panel1 = panel1 ^ C1_F;
				ent.setGuiParm( "gui_parm14" , 2 );
				l.setColor(1, 0, 0);
			} else {
				panel1 |= C1_F;
				ent.setGuiParm( "gui_parm14" , 1 );	
				l.setColor(0, 1, 0);
			}
		} else if( id == "2" ) {
			if( panel2 & C1_F ) {
				panel2 = panel2 ^ C1_F;
				ent.setGuiParm( "gui_parm14" , 2 );
				l.setColor(1, 0, 0);
			} else {
				panel2 |= C1_F;
				ent.setGuiParm( "gui_parm14" , 1 );	
				l.setColor(0, 1, 0);
			}
		} else if( id == "3" ) {
			if( panel3 & C1_F ) {
				panel3 = panel3 ^ C1_F;
				ent.setGuiParm( "gui_parm14" , 2 );
				l.setColor(1, 0, 0);
			} else {
				panel3 |= C1_F;
				ent.setGuiParm( "gui_parm14" , 1 );	
				l.setColor(0, 1, 0);
			}
		} else if( id == "4" ) {
			if( panel4 & C1_F ) {
				panel4 = panel4 ^ C1_F;
				ent.setGuiParm( "gui_parm14" , 2 );
				l.setColor(1, 0, 0);
			} else {
				panel4 |= C1_F;
				ent.setGuiParm( "gui_parm14" , 1 );	
				l.setColor(0, 1, 0);
			}
		}
	}	
	
	void func_p2( string id ) {
		entity ent;
		entity l;
	
		l = sys.getEntity( "light_p"+id+"_2" );
		ent = sys.getEntity( "solar_panel_terminal"+id );
	
		if( !ent || !l ) {
			return;
		}	

		if( id == "1" ) {
			if( panel1 & C2_F ) {
				panel1 = panel1 ^ C2_F;
				ent.setGuiParm( "gui_parm15" , 2 );
				l.setColor(1, 0, 0);
			} else {
				panel1 |= C2_F;
				ent.setGuiParm( "gui_parm15" , 1 );	
				l.setColor(0, 1, 0);
			}
		} else if( id == "2" ) {
			if( panel2 & C2_F ) {
				panel2 = panel2 ^ C2_F;
				ent.setGuiParm( "gui_parm15" , 2 );
				l.setColor(1, 0, 0);
			} else {
				panel2 |= C2_F;
				ent.setGuiParm( "gui_parm15" , 1 );	
				l.setColor(0, 1, 0);
			}
		} else if( id == "3" ) {
			if( panel3 & C2_F ) {
				panel3 = panel3 ^ C2_F;
				ent.setGuiParm( "gui_parm15" , 2 );
				l.setColor(1, 0, 0);
			} else {
				panel3 |= C2_F;
				ent.setGuiParm( "gui_parm15" , 1 );	
				l.setColor(0, 1, 0);
			}
		} else if( id == "4" ) {
			if( panel4 & C2_F ) {
				panel4 = panel4 ^ C2_F;
				ent.setGuiParm( "gui_parm15" , 2 );
				l.setColor(1, 0, 0);
			} else {
				panel4 |= C2_F;
				ent.setGuiParm( "gui_parm15" , 1 );	
				l.setColor(0, 1, 0);
			}
		}
	}
	
	void func_p3( string id ) {
		entity ent;
		entity l;
	
		l = sys.getEntity( "light_p"+id+"_3" );
		ent = sys.getEntity( "solar_panel_terminal"+id );
	
		if( !ent || !l ) {
			return;
		}	

		if( id == "1" ) {
			if( panel1 & C3_F ) {
				panel1 = panel1 ^ C3_F;
				ent.setGuiParm( "gui_parm16" , 2 );
				l.setColor(1, 0, 0);
			} else {
				panel1 |= C3_F;
				ent.setGuiParm( "gui_parm16" , 1 );	
				l.setColor(0, 1, 0);
			}
		} else if( id == "2" ) {
			if( panel2 & C3_F ) {
				panel2 = panel2 ^ C3_F;
				ent.setGuiParm( "gui_parm16" , 2 );
				l.setColor(1, 0, 0);
			} else {
				panel2 |= C3_F;
				ent.setGuiParm( "gui_parm16" , 1 );	
				l.setColor(0, 1, 0);
			}
		} else if( id == "3" ) {
			if( panel3 & C3_F ) {
				panel3 = panel3 ^ C3_F;
				ent.setGuiParm( "gui_parm16" , 2 );
				l.setColor(1, 0, 0);
			} else {
				panel3 |= C3_F;
				ent.setGuiParm( "gui_parm16" , 1 );	
				l.setColor(0, 1, 0);
			}
		} else if( id == "4" ) {
			if( panel4 & C3_F ) {
				panel4 = panel4 ^ C3_F;
				ent.setGuiParm( "gui_parm16" , 2 );
				l.setColor(1, 0, 0);
			} else {
				panel4 |= C3_F;
				ent.setGuiParm( "gui_parm16" , 1 );	
				l.setColor(0, 1, 0);
			}
		}
	}	

	void entRotate( entity ent, float axis, float pos, float down ) {
		// $phold_hor, X_AXIS, vertical, 1
		if( down == 1 ) {
			ent.rotateDownTo( axis, pos );
		} else {
			ent.rotateUpTo( axis, pos );
		}	
	}
	
	void move_holder( string signal ) {
		vector l;
		vector s;
		float horizontal;
		vector a;
		vector b;
	
		float y;
		float vertical;
		
		float h;
		float v;
	
		float sig;
		entity holder_ver;
		entity holder_hor;
		
		holder_ver = sys.getEntity( "phold_ver"+signal );
		holder_hor = sys.getEntity( "phold_hor"+signal );
		
		s = holder_ver.getWorldOrigin();
		
		entRotate( holder_hor, X_AXIS, 45, 0 );
		
		// check for a status change
		while( 1 ) {
		
			if( signal == "1" ) {
				sig = panel1 & HOLDER_F;
			} else if( signal == "2" ) {
				sig = panel2 & HOLDER_F;
			} else if( signal == "3" ) {
				sig = panel3 & HOLDER_F;
			} else if( signal == "4" ) {
				sig = panel4 & HOLDER_F;
			}  
			
				
			if( sig ) {
				l = $solar_holder.getWorldOrigin();	// $solar_holder stands alone
				a = holder_ver.getAngles();
				//b = holder_hor.getAngles();
				
				horizontal = sys.atan2deg( l_y - s_y, l_x - s_x );

				// FIXME: this looks inaccurate
				//vertical = sys.atan2deg( l_z - s_z, l_x - s_x );
				//vertical = sys.acosdeg( ( s_x * l_x + s_y * l_y + s_z * l_z ) / ( sys.sqrt( s_x*s_x + s_y*s_y + s_z*s_z ) * sys.sqrt( l_x*l_x + l_y*l_y + l_z*l_z ) ) );			
				//vertical = sys.Vec3Angle( s, l ) * 3.14;
				
				y = a_y;
				
				//sys.print( "vertical "+ vertical + "\n" );
				/*
				if( vertical < 180.0f ) {	
					vertical = 180 - vertical;
				} else {
					vertical = vertical - 180;
				}
				
				
				if( vertical > b_x ) {
					h = thread entRotate( holder_hor, X_AXIS, vertical, 0 );	
				} else {
					h = thread entRotate( holder_hor, X_AXIS, vertical, 1 );				
				}		
				sys.waitForThread( h );	
				*/
				if( horizontal < 0 ) {
					horizontal += 360;
				}				
				if( y < 0 ) {
					y += 360;
				}
				
				// FIXME: clockwise when > 360
				
				if( horizontal > y || (y - horizontal) > 180 ) {
					//v = thread entRotate( holder_ver, Y_AXIS, horizontal, 0 );
					entRotate( holder_ver, Y_AXIS, horizontal, 0 );
				} else {			
					//v = thread entRotate( holder_ver, Y_AXIS, horizontal, 1 );
					entRotate( holder_ver, Y_AXIS, horizontal, 1 );
				}
				
				//sys.waitForThread( v );
					
				sys.waitFor( holder_ver );
				sys.wait( 5 );
			}
			sys.wait( 0.5 );
		}
	}
	
	void solar_collect( float p ) {		
		if( p & HOLDER_F ) {
			if( p & C0_F ) {
				elecGain += ELEC_GAIN;
			}
			if( p & C1_F ) {
				elecGain += ELEC_GAIN;
			}			
			if( p & C2_F ) {
				elecGain += ELEC_GAIN;
			}			
			if( p & C1_F ) {
				elecGain += ELEC_GAIN;
			}			
		}	
	}
	
	void check_electricity() {
		
		while( 1 ) {
			solar_collect( panel1 );
			solar_collect( panel2 );
			solar_collect( panel3 );
			solar_collect( panel4 );
		
			sys.print( "elec gain "+ elecGain + "\n");
		
			elecGain = 0;
			sys.wait( 2 );
		}
		
	}
	
}