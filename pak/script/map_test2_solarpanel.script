namespace map_test2 {	
	
	float active_holder = 0;
	float active_panel0 = 0;
	float active_panel1 = 0;
	float active_panel2 = 0;
	float active_panel3 = 0;
	
	string tmp0 = "0";
	string tmp1 = "1";
	string tmp2 = "2";

	void set_code() {
	}
	
	void test1() {
		sys.print( "test1\n" );
	}
	
	void test2() {
		sys.print( "test2\n" );
	}	

	void new_pass() {
		tmp0 = $solar_panel_terminal.getGuiParm( "gui_parm1" );
		tmp1 = $solar_panel_terminal.getGuiParm( "gui_parm2" );
		tmp2 = $solar_panel_terminal.getGuiParm( "gui_parm3" );	
	}
	
	void logout() {
		$solar_panel_terminal.setGuiParm( "gui_parm6" , 3 );
	}
	
	void uninstall_mb() {
		active_holder = 0;
		active_panel0 = 0;
		active_panel1 = 0;
		active_panel2 = 0;
		active_panel3 = 0;
		$solar_panel_terminal.setGuiParm( "gui_parm6" , 4 );
	}
	
	void install_mb() {
		string cmd;
		
		cmd = $solar_panel_mb.getGuiParm( "gui_parm5" );
		
		tmp0 = sys.strMid( cmd, 0, 1 );
		tmp1 = sys.strMid( cmd, 1, 1 );
		tmp2 = sys.strMid( cmd, 2, 1 );
		
		$solar_panel_terminal.setGuiParm( "gui_parm6" , 5 );
	}
	
	void verify_pass() {
		if( $solar_panel_terminal.getGuiParm( "gui_parm1" ) == tmp0 && $solar_panel_terminal.getGuiParm( "gui_parm2" ) == tmp1 && $solar_panel_terminal.getGuiParm( "gui_parm3" ) == tmp2 ) {
			$solar_panel_terminal.setGuiParm( "gui_parm6" , 1 );	
			sys.print( "verify_pass ok\n" );
		} else {
			$solar_panel_terminal.setGuiParm( "ns0f" , 1 );	// force
			$solar_panel_terminal.setGuiParm( "gui_parm6" , 2 );
			sys.print( "verify_pass not ok " + $solar_panel_terminal.getGuiParm( "gui_parm1" ) + $solar_panel_terminal.getGuiParm( "gui_parm2" ) + $solar_panel_terminal.getGuiParm( "gui_parm3" ) + "\n" );
			
		}
	}
	
	void func_holder() {
		if( active_holder == 1 ) {
			sys.print( "func_holder 1 \n" );
			active_holder = 0;	
			$solar_panel_terminal.setGuiParm( "gui_parm12" , 2 );			
		} else {
			sys.print( "func_holder 0 \n" );
			active_holder = 1;
			$solar_panel_terminal.setGuiParm( "gui_parm12" , 1 );			
		}
	}
	
	void func_p0() {	
		if( active_panel0 == 1 ) {
			sys.print( "func_p0 1 \n" );
			active_panel0 = 0;	
			$solar_panel_terminal.setGuiParm( "gui_parm13" , 2 );	
			$light_p0_0.setColor(1, 0, 0);
		} else {
			sys.print( "func_p0 0\n" );
			active_panel0 = 1;
			$solar_panel_terminal.setGuiParm( "gui_parm13" , 1 );	
			$light_p0_0.setColor(0, 1, 0);
		}
	}
	
	void func_p1() {
		if( active_panel1 == 1 ) {
			active_panel1 = 0;	
			$solar_panel_terminal.setGuiParm( "gui_parm14" , 2 );		
			$light_p0_1.setColor(1, 0, 0);
		} else {
			active_panel1 = 1;
			$solar_panel_terminal.setGuiParm( "gui_parm14" , 1 );		
			$light_p0_1.setColor(0, 1, 0);
		}
	}	
	
	void func_p2() {
		if( active_panel2 == 1 ) {
			active_panel2 = 0;	
			$solar_panel_terminal.setGuiParm( "gui_parm15" , 2 );	
			$light_p0_2.setColor(1, 0, 0);
		} else {
			active_panel2 = 1;
			$solar_panel_terminal.setGuiParm( "gui_parm15" , 1 );			
			$light_p0_2.setColor(0, 1, 0);
		}
	}
	
	void func_p3() {
		if( active_panel3 == 1 ) {
			active_panel3 = 0;	
			$solar_panel_terminal.setGuiParm( "gui_parm16" , 2 );	
			$light_p0_3.setColor(1, 0, 0);
		} else {
			active_panel3 = 1;
			$solar_panel_terminal.setGuiParm( "gui_parm16" , 1 );	
			$light_p0_3.setColor(0, 1, 0);
		}
	}	

	void entRotate( entity ent, float axis, float pos, float down ) {
		// $phold_hor, X_AXIS, vertical, 1
		if( down == 1 ) {
			ent.rotateDownTo( axis, pos );
		} else {
			ent.rotateUpTo( axis, pos );
		}	
	}
	
	void checkLights() {
		if( active_panel0 == 1 ) {
			$light_p0_0.setColor(0, 1, 0);
		} else {
			$light_p0_0.setColor(1, 0, 0);
		}
		
		if( active_panel1 == 1 ) {
			$light_p0_1.setColor(0, 1, 0);
		} else {
			$light_p0_1.setColor(1, 0, 0);
		}

		if( active_panel2 == 1 ) {
			$light_p0_2.setColor(0, 1, 0);
		} else {
			$light_p0_2.setColor(1, 0, 0);
		}

		if( active_panel3 == 1 ) {
			$light_p0_3.setColor(0, 1, 0);
		} else {
			$light_p0_3.setColor(1, 0, 0);
		}	
	}
	
	void move_holder() {
		vector l;
		vector s;
		float horizontal;
		vector a;
		vector b;
		float tmp;
	
		float y;
		float vertical;
		
		float h;
		float v;
	
		s = $phold_ver.getWorldOrigin();
		
		// check for a status change
		while( 1 ) {
		
			//checkLights();
			
		while( active_holder ) {			
			l = $solar_holder.getWorldOrigin();
			a = $phold_ver.getAngles();
			b = $phold_hor.getAngles();
			
			//checkLights();
			
			horizontal = sys.atan2deg( l_y - s_y, l_x - s_x );

			// FIXME: this looks inaccurate
			//vertical = sys.atan2deg( l_z - s_z, l_x - s_x );
			//vertical = sys.acosdeg( ( s_x * l_x + s_y * l_y + s_z * l_z ) / ( sys.sqrt( s_x*s_x + s_y*s_y + s_z*s_z ) * sys.sqrt( l_x*l_x + l_y*l_y + l_z*l_z ) ) );			
			vertical = sys.Vec3Angle( s, l ) * 3.14;
			
			y = a_y;
			
			if( vertical < 90.0f ) {	
				vertical = 90 - vertical;
			} else {
				vertical = vertical - 90;
			}
		
			if( vertical > b_x ) {
				$phold_hor.rotateUpTo( X_AXIS, vertical );	
				h = thread entRotate( $phold_hor, X_AXIS, vertical, 0 );	
			} else {
				//$phold_hor.rotateDownTo( X_AXIS, vertical );
				h = thread entRotate( $phold_hor, X_AXIS, vertical, 1 );				
			}		
			sys.waitForThread( h );	
			
			if( horizontal < 0 ) {
				horizontal += 360;
			}				
			if( y < 0 ) {
				y += 360;
			}
			
			// FIXME: clockwise when > 360
			if( horizontal > y || (y - horizontal) > 180 ) {
				//v = thread entRotateUp( $phold_ver.rotateUpTo( Y_AXIS, horizontal );
				v = thread entRotate( $phold_ver, Y_AXIS, horizontal, 0 );
			} else {
				//$phold_ver.rotateDownTo( Y_AXIS, horizontal );			
				v = thread entRotate( $phold_ver, Y_AXIS, horizontal, 1 );
			}
			sys.waitForThread( v );
					
			sys.wait( .05 );		
		}
			sys.wait( 0.1 );
		}
	}

}